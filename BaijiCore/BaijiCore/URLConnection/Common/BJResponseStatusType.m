/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
#import "BJResponseStatusType.h"
#import "BJError.h"
#import "BJErrorDataType.h"
#import "BJExtensionType.h"
#import "BJAckCodeType.h"

@implementation BJResponseStatusType

+ (BJSchema *)schema {
    static BJSchema *__schema = nil;
    static dispatch_once_t onceToken;
    dispatch_once (&onceToken, ^{
        __schema = [[BJSchema parse:@"{\"type\":\"record\",\"name\":\"BJResponseStatusType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"fields\":[{\"name\":\"timestamp\",\"type\":[\"datetime\",\"null\"]},{\"name\":\"ack\",\"type\":[{\"type\":\"enum\",\"name\":\"BJAckCodeType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"symbols\":[\"SUCCESS\",\"FAILURE\",\"WARNING\",\"PARTIAL_FAILURE\"]},\"null\"]},{\"name\":\"errors\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BJErrorDataType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"fields\":[{\"name\":\"message\",\"type\":[\"string\",\"null\"]},{\"name\":\"errorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"stackTrace\",\"type\":[\"string\",\"null\"]},{\"name\":\"severityCode\",\"type\":[{\"type\":\"enum\",\"name\":\"BJSeverityCodeType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"symbols\":[\"ERROR\",\"WARNING\"]},\"null\"]},{\"name\":\"errorFields\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BJErrorFieldType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"fields\":[{\"name\":\"fieldName\",\"type\":[\"string\",\"null\"]},{\"name\":\"errorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"message\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"errorClassification\",\"type\":[{\"type\":\"enum\",\"name\":\"BJErrorClassificationCodeType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"symbols\":[\"SERVICE_ERROR\",\"VALIDATION_ERROR\",\"FRAMEWORK_ERROR\",\"SLA_ERROR\"]},\"null\"]}]}}},{\"name\":\"build\",\"type\":[\"string\",\"null\"]},{\"name\":\"version\",\"type\":[\"string\",\"null\"]},{\"name\":\"extension\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BJExtensionType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"version\",\"type\":[\"string\",\"null\"]},{\"name\":\"contentType\",\"type\":[\"string\",\"null\"]},{\"name\":\"value\",\"type\":[\"string\",\"null\"]}]}}}]}"] retain];
    });
    return __schema;
}

- (id)initWithTimestamp:(NSDate *)timestamp
                    ack:(BJAckCodeType *)ack
                 errors:(NSArray *)errors
                  build:(NSString *)build
                version:(NSString *)version
              extension:(NSArray *)extension {
    self = [super init];
    if (self) {
        _timestamp = timestamp;
        _ack = ack;
        _errors = errors;
        _build = build;
        _version = version;
        _extension = extension;
    }
    return self;
}

- (id)fieldAtIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: return self.timestamp;
        case 1: return self.ack;
        case 2: return self.errors;
        case 3: return self.build;
        case 4: return self.version;
        case 5: return self.extension;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in fieldAtIndex:", fieldPos]
                                  userInfo:nil];
    }
    return nil;
}

- (void)setObject:(id)object atIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: self.timestamp = object; break;
        case 1: self.ack = object; break;
        case 2: self.errors = object; break;
        case 3: self.build = object; break;
        case 4: self.version = object; break;
        case 5: self.extension = object; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in setObject:atIndex:", fieldPos]
                                  userInfo:nil];
    }
}


#pragma override NSObject methods

- (BOOL)isEqual:(id)object {
    if (object == nil)
        return NO;
    if ([self class] != [object class])
        return NO;
    BJResponseStatusType *that = (BJResponseStatusType *)object;
    return
    [self.timestamp isEqual:[that timestamp]] &&
    [self.ack isEqual:[that ack]] &&
    [self.errors isEqual:[that errors]] &&
    [self.build isEqual:[that build]] &&
    [self.version isEqual:[that version]] &&
    [self.extension isEqual:[that extension]];
}

- (NSUInteger)hash {
    NSUInteger result = 1;
    
    result = 31 * result + (self.timestamp == nil ? 0 : [self.timestamp hash]);
    result = 31 * result + (self.ack == nil ? 0 : [self.ack hash]);
    result = 31 * result + (self.errors == nil ? 0 : [self.errors hash]);
    result = 31 * result + (self.build == nil ? 0 : [self.build hash]);
    result = 31 * result + (self.version == nil ? 0 : [self.version hash]);
    result = 31 * result + (self.extension == nil ? 0 : [self.extension hash]);
    
    return result;
}

- (void)dealloc {
    [self.timestamp release];
    [self.ack release];
    [self.errors release];
    [self.build release];
    [self.version release];
    [self.extension release];
    [super dealloc];
}

@end
