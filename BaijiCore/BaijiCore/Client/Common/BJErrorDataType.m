/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
#import "BJErrorDataType.h"
#import "BJError.h"
#import "BJSeverityCodeType.h"
#import "BJErrorClassificationCodeType.h"
#import "BJErrorFieldType.h"

@implementation BJErrorDataType

+ (BJSchema *)schema {
    static BJSchema *__schema = nil;
    static dispatch_once_t onceToken;
    dispatch_once (&onceToken, ^{
        __schema = [[BJSchema parse:@"{\"type\":\"record\",\"name\":\"BJErrorDataType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"fields\":[{\"name\":\"message\",\"type\":[\"string\",\"null\"]},{\"name\":\"errorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"stackTrace\",\"type\":[\"string\",\"null\"]},{\"name\":\"severityCode\",\"type\":[{\"type\":\"enum\",\"name\":\"BJSeverityCodeType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"symbols\":[\"ERROR\",\"WARNING\"]},\"null\"]},{\"name\":\"errorFields\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BJErrorFieldType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"fields\":[{\"name\":\"fieldName\",\"type\":[\"string\",\"null\"]},{\"name\":\"errorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"message\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"errorClassification\",\"type\":[{\"type\":\"enum\",\"name\":\"BJErrorClassificationCodeType\",\"namespace\":\"com.ctrip.soa.common.types.v1\",\"symbols\":[\"SERVICE_ERROR\",\"VALIDATION_ERROR\",\"FRAMEWORK_ERROR\",\"SLA_ERROR\"]},\"null\"]}]}"] retain];
    });
    return __schema;
}

- (id)initWithMessage:(NSString *)message
            errorCode:(NSString *)errorCode
           stackTrace:(NSString *)stackTrace
         severityCode:(BJSeverityCodeType *)severityCode
          errorFields:(NSArray *)errorFields
  errorClassification:(BJErrorClassificationCodeType *)errorClassification {
    self = [super init];
    if (self) {
        _message = message;
        _errorCode = errorCode;
        _stackTrace = stackTrace;
        _severityCode = severityCode;
        _errorFields = errorFields;
        _errorClassification = errorClassification;
    }
    return self;
}

- (id)fieldAtIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: return self.message;
        case 1: return self.errorCode;
        case 2: return self.stackTrace;
        case 3: return self.severityCode;
        case 4: return self.errorFields;
        case 5: return self.errorClassification;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in fieldAtIndex:", fieldPos]
                                  userInfo:nil];
    }
    return nil;
}

- (void)setObject:(id)object atIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: self.message = object; break;
        case 1: self.errorCode = object; break;
        case 2: self.stackTrace = object; break;
        case 3: self.severityCode = object; break;
        case 4: self.errorFields = object; break;
        case 5: self.errorClassification = object; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in setObject:atIndex:", fieldPos]
                                  userInfo:nil];
    }
}


#pragma override NSObject methods

- (BOOL)isEqual:(id)object {
    if (object == nil)
        return NO;
    if ([self class] != [object class])
        return NO;
    BJErrorDataType *that = (BJErrorDataType *)object;
    return
    [self.message isEqual:[that message]] &&
    [self.errorCode isEqual:[that errorCode]] &&
    [self.stackTrace isEqual:[that stackTrace]] &&
    [self.severityCode isEqual:[that severityCode]] &&
    [self.errorFields isEqual:[that errorFields]] &&
    [self.errorClassification isEqual:[that errorClassification]];
}

- (NSUInteger)hash {
    NSUInteger result = 1;
    
    result = 31 * result + (self.message == nil ? 0 : [self.message hash]);
    result = 31 * result + (self.errorCode == nil ? 0 : [self.errorCode hash]);
    result = 31 * result + (self.stackTrace == nil ? 0 : [self.stackTrace hash]);
    result = 31 * result + (self.severityCode == nil ? 0 : [self.severityCode hash]);
    result = 31 * result + (self.errorFields == nil ? 0 : [self.errorFields hash]);
    result = 31 * result + (self.errorClassification == nil ? 0 : [self.errorClassification hash]);
    
    return result;
}

- (void)dealloc {
    [self.message release];
    [self.errorCode release];
    [self.stackTrace release];
    [self.severityCode release];
    [self.errorFields release];
    [self.errorClassification release];
    [super dealloc];
}

@end
