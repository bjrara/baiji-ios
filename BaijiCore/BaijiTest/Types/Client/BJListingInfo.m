/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
#import "BJListingInfo.h"
#import "BJError.h"
#import "BJAmount.h"

@implementation BJListingInfo

- (BJSchema *)schema {
    static BJSchema *__schema = nil;
    static dispatch_once_t onceToken;
    dispatch_once (&onceToken, ^{
        __schema = [[BJSchema parse:@"{\"type\":\"record\",\"name\":\"BJListingInfo\",\"namespace\":\"com.ctrip.soa.framework.soa.testservice.v1\",\"fields\":[{\"name\":\"bestOfferEnabled\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"buyItNowAvailable\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"buyItNowPrice\",\"type\":{\"type\":\"record\",\"name\":\"BJAmount\",\"namespace\":\"com.ctrip.soa.framework.soa.testservice.v1\",\"fields\":[{\"name\":\"value\",\"type\":[\"double\",\"null\"]},{\"name\":\"currencyId\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"convertedBuyItNowPrice\",\"type\":\"BJAmount\"},{\"name\":\"startTime\",\"type\":[\"datetime\",\"null\"]},{\"name\":\"endTime\",\"type\":[\"datetime\",\"null\"]},{\"name\":\"listingType\",\"type\":[\"string\",\"null\"]},{\"name\":\"gift\",\"type\":[\"boolean\",\"null\"]}]}"] retain];
    });
    return __schema;
}

- (id)initWithBestOfferEnabled:(NSNumber *)bestOfferEnabled
             buyItNowAvailable:(NSNumber *)buyItNowAvailable
                 buyItNowPrice:(BJAmount *)buyItNowPrice
        convertedBuyItNowPrice:(BJAmount *)convertedBuyItNowPrice
                     startTime:(NSDate *)startTime
                       endTime:(NSDate *)endTime
                   listingType:(NSString *)listingType
                          gift:(NSNumber *)gift {
    self = [super init];
    if (self) {
        self.bestOfferEnabled = bestOfferEnabled;
        self.buyItNowAvailable = buyItNowAvailable;
        self.buyItNowPrice = buyItNowPrice;
        self.convertedBuyItNowPrice = convertedBuyItNowPrice;
        self.startTime = startTime;
        self.endTime = endTime;
        self.listingType = listingType;
        self.gift = gift;
    }
    return self;
}

- (id)fieldAtIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: return self.bestOfferEnabled;
        case 1: return self.buyItNowAvailable;
        case 2: return self.buyItNowPrice;
        case 3: return self.convertedBuyItNowPrice;
        case 4: return self.startTime;
        case 5: return self.endTime;
        case 6: return self.listingType;
        case 7: return self.gift;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in fieldAtIndex:", fieldPos]
                                  userInfo:nil];
    }
    return nil;
}

- (void)setObject:(id)object atIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: self.bestOfferEnabled = object; break;
        case 1: self.buyItNowAvailable = object; break;
        case 2: self.buyItNowPrice = object; break;
        case 3: self.convertedBuyItNowPrice = object; break;
        case 4: self.startTime = object; break;
        case 5: self.endTime = object; break;
        case 6: self.listingType = object; break;
        case 7: self.gift = object; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in setObject:atIndex:", fieldPos]
                                  userInfo:nil];
    }
}


#pragma override NSObject methods

- (BOOL)isEqual:(id)object {
    if (object == nil)
        return NO;
    if ([self class] != [object class])
        return NO;
    BJListingInfo *that = (BJListingInfo *)object;
    return
    [self.bestOfferEnabled isEqual:[that bestOfferEnabled]] &&
    [self.buyItNowAvailable isEqual:[that buyItNowAvailable]] &&
    [self.buyItNowPrice isEqual:[that buyItNowPrice]] &&
    [self.convertedBuyItNowPrice isEqual:[that convertedBuyItNowPrice]] &&
    [self.startTime isEqual:[that startTime]] &&
    [self.endTime isEqual:[that endTime]] &&
    [self.listingType isEqual:[that listingType]] &&
    [self.gift isEqual:[that gift]];
}

- (NSUInteger)hash {
    NSUInteger result = 1;
    
    result = 31 * result + (self.bestOfferEnabled == nil ? 0 : [self.bestOfferEnabled hash]);
    result = 31 * result + (self.buyItNowAvailable == nil ? 0 : [self.buyItNowAvailable hash]);
    result = 31 * result + (self.buyItNowPrice == nil ? 0 : [self.buyItNowPrice hash]);
    result = 31 * result + (self.convertedBuyItNowPrice == nil ? 0 : [self.convertedBuyItNowPrice hash]);
    result = 31 * result + (self.startTime == nil ? 0 : [self.startTime hash]);
    result = 31 * result + (self.endTime == nil ? 0 : [self.endTime hash]);
    result = 31 * result + (self.listingType == nil ? 0 : [self.listingType hash]);
    result = 31 * result + (self.gift == nil ? 0 : [self.gift hash]);
    
    return result;
}

- (void)dealloc {
    [self.bestOfferEnabled release];
    [self.buyItNowAvailable release];
    [self.buyItNowPrice release];
    [self.convertedBuyItNowPrice release];
    [self.startTime release];
    [self.endTime release];
    [self.listingType release];
    [self.gift release];
    [super dealloc];
}

@end
