/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
#import "BJCategory.h"
#import "BJError.h"

@implementation BJCategory

- (BJSchema *)schema {
    static BJSchema *__schema = nil;
    static dispatch_once_t onceToken;
    dispatch_once (&onceToken, ^{
        __schema = [[BJSchema parse:@"{\"type\":\"record\",\"name\":\"BJCategory\",\"namespace\":\"com.ctrip.soa.framework.soa.testservice.v1\",\"fields\":[{\"name\":\"categoryId\",\"type\":[\"string\",\"null\"]},{\"name\":\"categoryName\",\"type\":[\"string\",\"null\"]}]}"] retain];
    });
    return __schema;
}

- (id)initWithCategoryId:(NSString *)categoryId
            categoryName:(NSString *)categoryName {
    self = [super init];
    if (self) {
        self.categoryId = categoryId;
        self.categoryName = categoryName;
    }
    return self;
}

- (id)fieldAtIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: return self.categoryId;
        case 1: return self.categoryName;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in fieldAtIndex:", fieldPos]
                                  userInfo:nil];
    }
    return nil;
}

- (void)setObject:(id)object atIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: self.categoryId = object; break;
        case 1: self.categoryName = object; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in setObject:atIndex:", fieldPos]
                                  userInfo:nil];
    }
}


#pragma override NSObject methods

- (BOOL)isEqual:(id)object {
    if (object == nil)
        return NO;
    if ([self class] != [object class])
        return NO;
    BJCategory *that = (BJCategory *)object;
    return
    [self.categoryId isEqual:[that categoryId]] &&
    [self.categoryName isEqual:[that categoryName]];
}

- (NSUInteger)hash {
    NSUInteger result = 1;
    
    result = 31 * result + (self.categoryId == nil ? 0 : [self.categoryId hash]);
    result = 31 * result + (self.categoryName == nil ? 0 : [self.categoryName hash]);
    
    return result;
}

- (void)dealloc {
    [self.categoryId release];
    [self.categoryName release];
    [super dealloc];
}

@end
