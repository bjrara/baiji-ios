/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
#import "BJTestSerializerSampleList.h"
#import "BJError.h"
#import "BJTestSerializerSample.h"

@implementation BJTestSerializerSampleList

- (BJSchema *)schema {
    static BJSchema *__schema = nil;
    static dispatch_once_t onceToken;
    dispatch_once (&onceToken, ^{
        __schema = [[BJSchema parse:@"{\"type\":\"record\",\"name\":\"BJTestSerializerSampleList\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"samples\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BJTestSerializerSample\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"bigint1\",\"type\":[\"long\",\"null\"]},{\"name\":\"boolean1\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"bytes1\",\"type\":[\"bytes\",\"null\"]},{\"name\":\"container1\",\"type\":{\"type\":\"record\",\"name\":\"BJRecord2Container\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"record2List\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BJRecord2\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"bigint2\",\"type\":[\"long\",\"null\"]},{\"name\":\"byteslist\",\"type\":{\"type\":\"array\",\"items\":[\"bytes\",\"null\"]}},{\"name\":\"enum2\",\"type\":[{\"type\":\"enum\",\"name\":\"BJEnum2Values\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"symbols\":[\"CAR\",\"BIKE\",\"PLANE\"]},\"null\"]},{\"name\":\"filling\",\"type\":{\"type\":\"record\",\"name\":\"BJModelFilling\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"boolfilling\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"enumfilling\",\"type\":[{\"type\":\"enum\",\"name\":\"BJEnum1Values\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"symbols\":[\"BLUE\",\"RED\",\"GREEN\"]},\"null\"]},{\"name\":\"intfilling\",\"type\":[\"int\",\"null\"]},{\"name\":\"modelfilling\",\"type\":{\"type\":\"record\",\"name\":\"BJModelFilling2\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"enumfilling\",\"type\":[\"BJEnum2Values\",\"null\"]},{\"name\":\"listfilling\",\"type\":{\"type\":\"array\",\"items\":[\"string\",\"null\"]}},{\"name\":\"longfilling\",\"type\":[\"long\",\"null\"]},{\"name\":\"stringfilling\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"stringfilling1\",\"type\":[\"string\",\"null\"]},{\"name\":\"stringfilling2\",\"type\":[\"string\",\"null\"]},{\"name\":\"stringfilling3\",\"type\":[\"string\",\"null\"]},{\"name\":\"stringfilling4\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"list2\",\"type\":{\"type\":\"array\",\"items\":[\"int\",\"null\"]}},{\"name\":\"nullablebigint\",\"type\":[\"long\",\"null\"]},{\"name\":\"map2\",\"type\":[{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"BJRecord\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"sBoolean\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"sInt\",\"type\":[\"int\",\"null\"]},{\"name\":\"sString\",\"type\":[\"string\",\"null\"]}]}},\"null\"]}]}}}]}},{\"name\":\"date1\",\"type\":[\"datetime\",\"null\"]},{\"name\":\"double1\",\"type\":[\"double\",\"null\"]},{\"name\":\"enum1\",\"type\":[\"BJEnum1Values\",\"null\"]},{\"name\":\"innerSample\",\"type\":\"BJTestSerializerSample\"},{\"name\":\"int1\",\"type\":[\"int\",\"null\"]},{\"name\":\"list1\",\"type\":{\"type\":\"array\",\"items\":[\"string\",\"null\"]}},{\"name\":\"nullableint\",\"type\":[\"int\",\"null\"]},{\"name\":\"record\",\"type\":{\"type\":\"record\",\"name\":\"BJRecord\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"sBoolean\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"sInt\",\"type\":[\"int\",\"null\"]},{\"name\":\"sString\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"smallint1\",\"type\":[\"int\",\"null\"]},{\"name\":\"string1\",\"type\":[\"string\",\"null\"]},{\"name\":\"tinyint1\",\"type\":[\"int\",\"null\"]},{\"name\":\"map1\",\"type\":[{\"type\":\"map\",\"values\":\"int\"},\"null\"]}]}}}]}"] retain];
    });
    return __schema;
}

- (id)initWithSamples:(NSArray *)samples {
    self = [super init];
    if (self) {
        self.samples = samples;
    }
    return self;
}

- (id)fieldAtIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: return self.samples; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in fieldAtIndex:", fieldPos]
                                  userInfo:nil];
    }
    return nil;
}

- (void)setObject:(id)object atIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: self.samples = object; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in setObject:atIndex:", fieldPos]
                                  userInfo:nil];
    }
}


#pragma override NSObject methods

- (BOOL)isEqual:(id)object {
    if (object == nil)
        return NO;
    if ([self class] != [object class])
        return NO;
    BJTestSerializerSampleList *that = (BJTestSerializerSampleList *)object;
    return
    [self.samples isEqual:[that samples]];
}

- (NSUInteger)hash {
    NSUInteger result = 1;
    
    result = 31 * result + (self.samples == nil ? 0 : [self.samples hash]);
    
    return result;
}

- (void)dealloc {
    [self.samples release];
    [super dealloc];
}

@end
