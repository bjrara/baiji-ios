/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
#import "BJModelFilling2.h"
#import "BJError.h"
#import "BJEnum2Values.h"

@implementation BJModelFilling2

- (BJSchema *)schema {
    static BJSchema *__schema = nil;
    static dispatch_once_t onceToken;
    dispatch_once (&onceToken, ^{
        __schema = [[BJSchema parse:@"{\"type\":\"record\",\"name\":\"BJModelFilling2\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"fields\":[{\"name\":\"enumfilling\",\"type\":[{\"type\":\"enum\",\"name\":\"BJEnum2Values\",\"namespace\":\"com.ctrip.soa.framework.soa.crosstest.v1\",\"symbols\":[\"CAR\",\"BIKE\",\"PLANE\"]},\"null\"]},{\"name\":\"listfilling\",\"type\":{\"type\":\"array\",\"items\":[\"string\",\"null\"]}},{\"name\":\"longfilling\",\"type\":[\"long\",\"null\"]},{\"name\":\"stringfilling\",\"type\":[\"string\",\"null\"]}]}"] retain];
    });
    return __schema;
}

- (id)initWithEnumfilling:(BJEnum2Values *)enumfilling
              listfilling:(NSArray *)listfilling
              longfilling:(NSNumber *)longfilling
            stringfilling:(NSString *)stringfilling {
    self = [super init];
    if (self) {
        self.enumfilling = enumfilling;
        self.listfilling = listfilling;
        self.longfilling = longfilling;
        self.stringfilling = stringfilling;
    }
    return self;
}

- (id)fieldAtIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: return self.enumfilling; break;
        case 1: return self.listfilling; break;
        case 2: return self.longfilling; break;
        case 3: return self.stringfilling; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in fieldAtIndex:", fieldPos]
                                  userInfo:nil];
    }
    return nil;
}

- (void)setObject:(id)object atIndex:(int)fieldPos {
    switch (fieldPos) {
        case 0: self.enumfilling = object; break;
        case 1: self.listfilling = object; break;
        case 2: self.longfilling = object; break;
        case 3: self.stringfilling = object; break;
        default:
            [NSException exceptionWithName:BJRuntimeException
                                    reason:[NSString stringWithFormat:@"Bad index %d in setObject:atIndex:", fieldPos]
                                  userInfo:nil];
    }
}


#pragma override NSObject methods

- (BOOL)isEqual:(id)object {
    if (object == nil)
        return NO;
    if ([self class] != [object class])
        return NO;
    BJModelFilling2 *that = (BJModelFilling2 *)object;
    return
    [self.enumfilling isEqual:[that enumfilling]] &&
    [self.listfilling isEqual:[that listfilling]] &&
    [self.longfilling isEqual:[that longfilling]] &&
    [self.stringfilling isEqual:[that stringfilling]];
}

- (NSUInteger)hash {
    NSUInteger result = 1;
    
    result = 31 * result + (self.enumfilling == nil ? 0 : [self.enumfilling hash]);
    result = 31 * result + (self.listfilling == nil ? 0 : [self.listfilling hash]);
    result = 31 * result + (self.longfilling == nil ? 0 : [self.longfilling hash]);
    result = 31 * result + (self.stringfilling == nil ? 0 : [self.stringfilling hash]);
    
    return result;
}

- (void)dealloc {
    [self.enumfilling release];
    [self.listfilling release];
    [self.longfilling release];
    [self.stringfilling release];
    [super dealloc];
}

@end
